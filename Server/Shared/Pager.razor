@using BlazorDatasource.Server.Models.Common;
@if (TotalItems > 0)
{
    <nav class="flex flex-col md:flex-row justify-between items-start md:items-center space-y-3 md:space-y-0 p-4" aria-label="Table navigation">
        <span class="text-sm font-normal text-secondary-500">
            @T["Pager.Showing"]
            <span class="font-semibold text-secondary-900">@FirstItem - @LastItem</span>
            @T["Pager.Of"]
            <span class="font-semibold text-secondary-900">@TotalItems</span>
        </span>
        <ul class="inline-flex items-stretch -space-x-px">
            <!--First Page-->
            @if (PageIndex >= 3 && TotalPages > PagingDefaults.IndividualPagesDisplayedCount)
            {
                <li>
                    <button type="button" @onclick="async() => await UpdatePageNumber(1)" class="relative inline-flex items-center rounded-l-md px-4 py-2 text-secondary-400 ring-1 ring-inset ring-secondary-300 text-sm hover:bg-secondary-100 focus:z-20 focus:outline-offset-0 hover:text-primary-700">
                        <span class="sr-only">@T["Pager.First"]</span>
                        <svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" viewBox="0 0 20 20" fill="currentColor" class="w-5 h-5">
                            <path fill-rule="evenodd" d="M15.79 14.77a.75.75 0 01-1.06.02l-4.5-4.25a.75.75 0 010-1.08l4.5-4.25a.75.75 0 111.04 1.08L11.832 10l3.938 3.71a.75.75 0 01.02 1.06zm-6 0a.75.75 0 01-1.06.02l-4.5-4.25a.75.75 0 010-1.08l4.5-4.25a.75.75 0 111.04 1.08L5.832 10l3.938 3.71a.75.75 0 01.02 1.06z" clip-rule="evenodd" />
                        </svg>
                    </button>
                </li>
            }
            <!--Previous-->
            @if (PageIndex > 0)
            {
                <li>
                    <button type="button" @onclick="async() => await UpdatePageNumber(PageIndex)" class="relative inline-flex items-center rounded-l-md px-4 py-2 text-secondary-400 ring-1 ring-inset ring-secondary-300 hover:bg-secondary-100 focus:z-20 focus:outline-offset-0 hover:text-primary-700">
                        <span class="sr-only">@T["Pager.Previous"]</span>
                        <svg class="w-5 h-5" aria-hidden="true" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
                            <path fill-rule="evenodd" d="M12.707 5.293a1 1 0 010 1.414L9.414 10l3.293 3.293a1 1 0 01-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z" clip-rule="evenodd" />
                        </svg>
                    </button>
                </li>
            }
            <!--Individual Pages-->
            @{
                var firstIndividualPageIndex = GetFirstIndividualPageIndex();
                var lastIndividualPageIndex = GetLastIndividualPageIndex();
                for (var i = firstIndividualPageIndex; i <= lastIndividualPageIndex; i++)
                {
                    var pageIndexForDisplay = i + 1;
                    if (PageIndex == i)
                    {
                        <li>
                            <button type="button" @onclick="async() => await UpdatePageNumber(pageIndexForDisplay)" aria-current="page" class="relative z-10 inline-flex items-center bg-primary-600 px-4 py-2 text-sm font-semibold text-white focus:z-20 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-primary-600">@pageIndexForDisplay</button>
                        </li>
                    }
                    else
                    {
                        <li>
                            <button type="button" @onclick="async() => await UpdatePageNumber(pageIndexForDisplay)" class="relative inline-flex items-center px-4 py-2 text-sm font-semibold text-secondary-900 ring-1 ring-inset ring-secondary-300 hover:bg-secondary-100 focus:z-20 focus:outline-offset-0">@pageIndexForDisplay</button>
                        </li>
                    }

                }
            }
            <!--Next-->
            @if ((PageIndex + 1) < TotalPages)
            {
                <li>
                    <button type="button" @onclick="async() => await UpdatePageNumber(PageIndex + 2)" class="relative inline-flex items-center rounded-r-md px-4 py-2 text-secondary-400 ring-1 ring-inset ring-secondary-300 hover:bg-secondary-100 focus:z-20 focus:outline-offset-0 hover:text-primary-700">
                        <span class="sr-only">@T["Pager.Next"]</span>
                        <svg class="w-5 h-5" aria-hidden="true" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
                            <path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd" />
                        </svg>
                    </button>
                </li>
            }
            <!--Last Page-->
            @if (((PageIndex + 3) < TotalPages) && (TotalPages > PagingDefaults.IndividualPagesDisplayedCount))
            {
                <li>
                    <button type="button" @onclick="async() => await UpdatePageNumber(TotalPages)" class="relative inline-flex items-center rounded-r-md px-4 py-2 text-secondary-400 text-sm ring-1 ring-inset ring-secondary-300 hover:bg-secondary-100 focus:z-20 focus:outline-offset-0 hover:text-primary-700">
                        <span class="sr-only">@T["Pager.Last"]</span>
                        <svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" viewBox="0 0 20 20" fill="currentColor" class="w-5 h-5">
                            <path fill-rule="evenodd" d="M10.21 14.77a.75.75 0 01.02-1.06L14.168 10 10.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z" clip-rule="evenodd" />
                            <path fill-rule="evenodd" d="M4.21 14.77a.75.75 0 01.02-1.06L8.168 10 4.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z" clip-rule="evenodd" />
                        </svg>
                    </button>
                </li>
            }
        </ul>
    </nav>
}
