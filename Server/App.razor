@using BlazorDatasource.Shared.Infrastructure;
@inject TokenProvider TokenProvider
<CascadingAuthenticationState>
    <Router AppAssembly="@typeof(App).Assembly">
        <Found Context="routeData">
            <AuthorizeRouteView RouteData="@routeData" DefaultLayout="@typeof(DashboardLayout)" />
        </Found>
        <NotFound>
            <PageTitle>Datasource | Not found</PageTitle>
            <LayoutView Layout="@typeof(MainLayout)">
                @*                <div class="relative z-10" aria-labelledby="modal-title" role="dialog" aria-modal="true">
                <div class="fixed inset-0 bg-secondary-500 bg-opacity-100 transition-opacity"></div>
                <div class="fixed inset-0 z-10 overflow-y-auto">
                <div class="flex min-h-full items-end justify-center p-4 text-center sm:items-center sm:p-0">
                <div class="relative transform overflow-hidden rounded-lg bg-white text-left shadow-xl transition-all sm:my-8 sm:w-full sm:max-w-lg">
                <div class="bg-white px-4 pt-5 pb-4 sm:p-6 sm:pb-4">
                <div class="sm:flex sm:items-start">
                <div class="mx-auto flex h-12 w-12 flex-shrink-0 items-center justify-center rounded-full bg-error-100 sm:mx-0 sm:h-10 sm:w-10">
                <svg class="h-6 w-6 text-error-600" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" aria-hidden="true">
                <path stroke-linecap="round" stroke-linejoin="round" d="M12 10.5v3.75m-9.303 3.376C1.83 19.126 2.914 21 4.645 21h14.71c1.73 0 2.813-1.874 1.948-3.374L13.949 4.88c-.866-1.501-3.032-1.501-3.898 0L2.697 17.626zM12 17.25h.007v.008H12v-.008z" />
                </svg>
                </div>
                <div class="mt-3 text-center sm:mt-0 sm:ml-4 sm:text-left">
                <h3 class="text-lg font-medium leading-6 text-secondary-900" id="modal-title">Page not found?</h3>
                <div class="mt-2">
                <p class="text-sm text-secondary-500">Sorry, there's nothing at this address.</p>
                </div>
                </div>
                </div>
                </div>
                <div class="bg-secondary-100 px-4 py-3 sm:flex sm:flex-row-reverse sm:px-6">
                <a href="/" class="inline-flex w-full justify-center rounded-md border border-transparent bg-primary-600 px-4 py-2 text-base font-medium text-white shadow-sm hover:bg-primary-700 focus:outline-none focus:ring-2 focus:ring-primary-500 focus:ring-offset-2 sm:ml-3 sm:w-auto sm:text-sm">Go back</a>
                </div>
                </div>
                </div>
                </div>
                </div>*@
                <div class="relative px-6 lg:px-8">
                    <main class="grid min-h-full place-items-center py-24 px-6 sm:py-32 lg:px-8">
                        <div class="text-center">
                            <p class="text-base font-semibold text-primary-600">404</p>
                            <h1 class="mt-4 text-3xl font-bold tracking-tight text-secondary-900 sm:text-5xl">Page not found</h1>
                            <p class="mt-6 text-base leading-7 text-secondary-600">Sorry, we couldn’t find the page you’re looking for.</p>
                            <div class="mt-10 flex items-center justify-center gap-x-6">
                                <a href="/" class="rounded-md bg-primary-600 px-3.5 py-2.5 text-sm font-semibold text-white shadow-sm hover:bg-primary-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-primary-600">Go back home</a>
                            </div>
                        </div>
                    </main>
                </div>
            </LayoutView>
        </NotFound>
    </Router>
</CascadingAuthenticationState>
@code {
    [Parameter]
    public InitialApplicationState? InitialState { get; set; }

    protected override Task OnInitializedAsync()
    {
        TokenProvider.AccessToken = InitialState?.AccessToken;
        TokenProvider.RefreshToken = InitialState?.RefreshToken;

        return base.OnInitializedAsync();
    }
}