@using Microsoft.AspNetCore.Components.Forms;
@if (LanguageModel is not null)
{
    <div class="md:grid md:grid-cols-3 md:gap-6">
        <div class="md:col-span-1">
            <div class="px-4 sm:px-0">
                <h3 class="text-lg font-medium leading-6 text-secondary-900">@Mode</h3>
            </div>
        </div>
        <div class="mt-5 md:col-span-2 md:mt-0">
            <EditForm Model="@LanguageModel" OnSubmit="(async () => await HandleSubmitAsync())">
                <FluentValidationSummary @ref="FluentValidation" />
                <div class="overflow-hidden shadow sm:rounded-md">
                    <div class="bg-white px-4 py-4 sm:p-6">
                        <div class="grid grid-cols-6 gap-6">
                            <div class="col-span-6">
                                <label for="@nameof(LanguageModel.Name)" class="block text-sm font-medium text-secondary-700 ">@T["Languages.Fields.Name"]</label>
                                <InputText @bind-Value="LanguageModel.Name" class="mt-1 block w-full rounded-md border border-secondary-300 bg-white py-2 px-3 shadow-sm focus:border-primary-500 focus:outline-none focus:ring-primary-500 sm:text-sm" />
                                <div class="block text-sm font-medium text-error-700">
                                    <ValidationMessage For="@(() => LanguageModel.Name)" />
                                </div>
                            </div>
                            <div class="col-span-6">
                                <label for="@nameof(LanguageModel.UniqueSeoCode)" class="block text-sm font-medium text-secondary-700">@T["Languages.Fields.UniqueSeoCode"]</label>
                                <InputText @bind-Value="LanguageModel.UniqueSeoCode" class="mt-1 block w-full rounded-md border border-secondary-300 bg-white py-2 px-3 shadow-sm focus:border-primary-500 focus:outline-none focus:ring-primary-500 sm:text-sm" />
                                <div class="block text-sm font-medium text-error-700">
                                    <ValidationMessage For="@(() => LanguageModel.UniqueSeoCode)" />
                                </div>
                            </div>
                            <div class="col-span-6">
                                <label for="@nameof(LanguageModel.LanguageCulture)" class="block text-sm font-medium text-secondary-700">@T["Languages.Fields.LanguageCulture"]</label>
                                <InputSelect @bind-Value="LanguageModel.LanguageCulture" class="mt-1 block w-full rounded-md border border-secondary-300 bg-white py-2 px-3 shadow-sm focus:border-primary-500 focus:outline-none focus:ring-primary-500 sm:text-sm">
                                    @foreach (var culture in AvailableCultures)
                                    {
                                        <option value="@culture.Value">@culture.Text</option>
                                    }
                                </InputSelect>
                                <div class="block text-sm font-medium text-error-700">
                                    <ValidationMessage For="@(() => LanguageModel.LanguageCulture)" />
                                </div>
                            </div>
                            <div class="col-span-6">
                                <label for="@nameof(LanguageModel.FlagImageFileName)" class="block text-sm font-medium text-secondary-700">@T["Languages.Fields.FlagImageFilename"]</label>
                                <InputSelect @bind-Value="LanguageModel.FlagImageFileName" class="mt-1 block w-full rounded-md border border-secondary-300 bg-white py-2 px-3 shadow-sm focus:border-primary-500 focus:outline-none focus:ring-primary-500 sm:text-sm">
                                    @foreach (var flag in AvailableFlagFileNames)
                                    {
                                        <option value="@flag.Value">
                                            @flag.Text
                                        </option>
                                    }
                                </InputSelect>
                                <div class="block text-sm font-medium text-error-700">
                                    <ValidationMessage For="@(() => LanguageModel.FlagImageFileName)" />
                                </div>
                            </div>
                            <div class="col-span-6">
                                <label for="@nameof(LanguageModel.DisplayOrder)" class="block text-sm font-medium text-secondary-700">@T["Languages.Fields.DisplayOrder"]</label>
                                <InputNumber @bind-Value="LanguageModel.DisplayOrder" class="mt-1 block w-full rounded-md border-secondary-300 shadow-sm focus:border-primary-500 focus:ring-primary-500 sm:text-sm" min="0" />
                                <div class="block text-sm font-medium text-error-700">
                                    <ValidationMessage For="@(() => LanguageModel.DisplayOrder)" />
                                </div>
                            </div>
                            <div class="col-span-6">
                                <div class="flex items-start">
                                    <div class="flex h-5 items-center">
                                        <InputCheckbox @bind-Value="LanguageModel.Published" class="mt-1 h-4 w-4 rounded border-secondary-300 text-primary-600 focus:ring-primary-500 sm:text-sm" />
                                    </div>
                                    <div class="ml-3 text-sm">
                                        <label for="@nameof(LanguageModel.Published)" class="text-sm font-medium text-secondary-700">@T["Languages.Fields.Published"]</label>
                                    </div>
                                </div>
                                <div class="block text-sm font-medium text-error-700">
                                    <ValidationMessage For="@(() => LanguageModel.Published)" />
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="bg-secondary-100 px-4 py-3 text-right sm:px-6 shadow sm:rounded-md sm:w-full">
                        <button type="button" @onclick="CancelAsync" class="mt-3 w-full sm:mt-0 sm:w-auto sm:text-sm inline-flex justify-center bg-white rounded-md border border-secondary-300 py-2 px-4 text-sm font-medium shadow-sm text-secondary-700 hover:bg-secondary-200 hover:text-primary-700 focus:z-20" disabled="@Busy">
                            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="-ml-1 mr-3 h-5 w-5 hidden sm:block">
                                <path stroke-linecap="round" stroke-linejoin="round" d="M19.5 12h-15m0 0l6.75 6.75M4.5 12l6.75-6.75" />
                            </svg>
                            @T["Common.Cancel"]
                        </button>
                        <button type="submit" @onclick="@(()=> ContinueEditing = true)" disabled="@Busy" class="mt-3 w-full sm:mt-0 sm:w-auto sm:text-sm inline-flex justify-center rounded-md border border-transparent bg-primary-600 px-4 py-2 text-sm font-medium text-white shadow-sm hover:bg-primary-700">
                            @if (Busy)
                            {
                                <svg class="animate-spin -ml-1 mr-3 h-5 w-5" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                                    <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
                                    <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                                </svg>
                                @T["Common.Busy"]
                            }
                            else
                            {
                                <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="-ml-1 mr-3 h-5 w-5 hidden sm:block">
                                    <path stroke-linecap="round" stroke-linejoin="round" d="M9 12.75L11.25 15 15 9.75M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
                                </svg>
                                @T["Common.SaveAndContinue"]
                            }
                        </button>
                        <button type="submit" @onclick="@(()=> ContinueEditing = false)" disabled="@Busy" class="mt-3 w-full sm:mt-0 sm:w-auto sm:text-sm inline-flex justify-center rounded-md border border-transparent bg-primary-600 py-2 px-4 text-sm font-medium text-white shadow-sm hover:bg-primary-700">
                            @if (Busy)
                            {
                                <svg class="animate-spin -ml-1 mr-3 h-5 w-5" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                                    <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
                                    <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                                </svg>
                                @T["Common.Busy"]
                            }
                            else
                            {
                                <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="-ml-1 mr-3 h-5 w-5 hidden sm:block">
                                    <path stroke-linecap="round" stroke-linejoin="round" d="M9 12.75L11.25 15 15 9.75M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
                                </svg>
                                @T["Common.Save"]
                            }
                        </button>
                    </div>
                </div>
            </EditForm>
        </div>
    </div>
}