@page "/dashboard/datasets/workflows/view/{WorkflowUuid}"
@using Microsoft.AspNetCore.Mvc.Rendering;
@using BlazorDatasource.Server.Models.Common
@using Microsoft.Build.Framework
@using Newtonsoft.Json
@attribute [Authorize]
<PageTitle>Datasource | @T["Workflows.View.Title"]</PageTitle>
<script>
    window.showDivFor5Seconds = function (divId) {
        var div = document.getElementById(divId);
        div.style.display = 'block';
        setTimeout(function () {
            div.style.display = 'none';
        }, 5000);
    };
</script>
<div class="max-w-7xl py-6 sm:px-6 lg:px-8" style="display:flex; flex-direction: row">
    <div class="max-w-none" style="margin-right:auto;">
        <article class="prose xl:max-w-none">
            <h1>@T["Workflows.View.Title"]</h1>
        </article>
    </div>
    @if (@Progress is not null && @Progress != "")
    {
        <div style="display:flex;align-self:center;" class="px-2 py-1">@Progress</div>
    }
    @if (@Status is not null && @Status != "")
    {
        <div style="display:flex;align-self:center;" class="text-white border-solid rounded-lg bg-primary-500 px-2 py-1">@Status</div>
    }
</div>
<div class="mx-auto max-w-7xl py-6 sm:px-6 lg:px-8">
    <div class="mx-auto max-w-none">
        @if (Loading)
        {
            <div class="flex p-4 mb-4 text-sm text-info-800 border border-info-300 rounded-lg bg-info-50" role="alert">
                <svg class="animate-spin -ml-1 mr-3 h-5 w-5" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                    <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
                    <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                </svg>
                <span class="sr-only">@T["Common.Loading"]</span>
                <div>
                    <span class="font-medium">@T["Common.Loading"]</span>
                </div>
            </div>
        }
        else
        {
            @if (Error)
            {
                <div class="flex p-4 mb-4 bg-error-200 border-t-4 border-error-500 text-error-700" role="alert">
                    <svg class="flex-shrink-0 w-5 h-5 text-error-700 mr-3" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
                        <path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z" clip-rule="evenodd"></path>
                    </svg>
                    <div class="ml-3 text-sm font-medium">
                        @ErrorMessage
                    </div>
                    <button type="button" class="ml-auto -mx-1.5 -my-1.5 bg-error-200 text-error-500 rounded-lg focus:ring-2 focus:ring-error-400 p-1.5 hover:bg-error-50 inline-flex h-8 w-8" aria-label="Close" @onclick="async() => { Error = false;}">
                        <span class="sr-only">Dismiss</span>
                        <svg aria-hidden="true" class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
                            <path fill-rule="evenodd" d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z" clip-rule="evenodd"></path>
                        </svg>
                    </button>
                </div>
            }
            @if (WorkflowResultTables.Count > 0)
            {
                <div class="ml-3 text-lg font-medium mb-4">@T["Workflows.Results.Tables"]</div>
            }
            @foreach (var tableResult in WorkflowResultTables)
            {
                <div class="ml-3 text-sm font-medium mb-4">@tableResult.Name</div>
                <table class="w-full text-sm text-left text-secondary-500 table-auto" style="margin-bottom: 50px;">
                    <thead class="text-xs text-secondary-700 uppercase bg-secondary-100">
                    <tr class="hidden sm:table-row">
                        @if (tableResult.Data != null)
                        {
                                foreach (var key in tableResult.Data[0].Keys.ToArray())
                            {
                                    <th scope="col" class="px-4 py-3">@key</th>
                            }
                                
                        }
                        
                    </tr>
                    </thead>
                    <tbody>
                    @if (tableResult.Data != null)
                    {
                        foreach (var data in tableResult.Data)
                        {
                            <tr class="border-b flex flex-col mb-4 sm:table-row">
                            @foreach (var val in data.Values)
                            {
                                <td scope="col" class="px-4 py-3">@val</td>
                            }
                            </tr>
                        }
                                
                    }
                    </tbody>
                </table>
            }
            @if (WorkflowResultDatasets.Count > 0)
            {
                <div class="ml-3 text-lg font-medium mb-4">@T["Workflows.Results.Datasets"]</div>
            }
            @foreach (var datasetResult in WorkflowResultDatasets)
            {
                <div class="ml-3 text-sm font-medium mb-4">@datasetResult.Name</div>
                <div class="ml-3 text-sm mb-4">
                    <button type="button" @onclick="@(e => NavigationManager.NavigateTo($"/dashboard/datasets/downloaded/view/{@datasetResult.Uuid}"))" class="text-white bg-primary-700 hover:bg-primary-800 focus:ring-4 focus:outline-none focus:ring-primary-300 font-medium rounded-lg text-sm px-4 py-2">@T["Datasets.Downloaded.View"]</button>
                </div>
            }
            @if (WorkflowOperatorTables.Count > 0)
            {
                <div class="ml-3 text-lg font-medium mb-4">@T["Workflows.Operators.Tables"]</div>
            }
            @foreach (var tableResult in WorkflowOperatorTables)
            {
                <div class="ml-3 text-sm font-medium mb-4">@tableResult.Name</div>
                <table class="w-full text-sm text-left text-secondary-500 table-auto" style="margin-bottom: 50px;">
                    <thead class="text-xs text-secondary-700 uppercase bg-secondary-100">
                    <tr class="hidden sm:table-row">
                        @if (tableResult.Data != null)
                        {
                            var i = JsonConvert.DeserializeObject<List<Dictionary<string, object>>>(tableResult.Data.ToString());
                            foreach (var key in i[0].Keys.ToArray())
                            {
                                <th scope="col" class="px-4 py-3">@key</th>
                            }
                                
                        }
                        
                    </tr>
                    </thead>
                    <tbody>
                    @if (tableResult.Data != null)
                    {
                            var i = JsonConvert.DeserializeObject<List<Dictionary<string, object>>>(tableResult.Data.ToString());
                            foreach (var data in i)
                        {
                            <tr class="border-b flex flex-col mb-4 sm:table-row">
                                @foreach (var val in data.Values)
                                {
                                    <td scope="col" class="px-4 py-3">@val</td>
                                }
                            </tr>
                        }
                                
                    }
                    </tbody>
                </table>
            }
            @if (WorkflowOperatorDatasets.Count > 0)
            {
                <div class="ml-3 text-lg font-medium mb-4">@T["Workflows.Operators.Datasets"]</div>
            }
            @foreach (var datasetResult in WorkflowOperatorDatasets)
            {
                <div class="ml-3 text-sm font-medium mb-4">@datasetResult.Name</div>
                <div class="ml-3 text-sm mb-4">
                    <button type="button" @onclick="@(e => NavigationManager.NavigateTo($"/dashboard/datasets/downloaded/view/{@datasetResult.Uuid}"))" class="text-white bg-primary-700 hover:bg-primary-800 focus:ring-4 focus:outline-none focus:ring-primary-300 font-medium rounded-lg text-sm px-4 py-2">@T["Datasets.Downloaded.View"]</button>
                </div>
            }
            @if (WorkflowOperatorCharts.Count > 0)
            {
                <div class="ml-3 text-lg font-medium mb-4">@T["Workflows.Operators.Charts"]</div>
            }
            @foreach (var datasetResult in WorkflowOperatorCharts)
            {
                if (datasetResult.Data != null)
                {
                    var data = JsonConvert.DeserializeObject<Dictionary<string, List<object>>>(datasetResult.Data.ToString());
                    var input = new ChartDataMultiple();
                    input.Id = Guid.NewGuid();

                    foreach (var item in data.Where(i => i.Key == "labels").FirstOrDefault().Value)
                    {
                        input.Labels.Add(item.ToString());
                    }

                    var counter = 0;
                    foreach (var item in data.Where(i => i.Key == "values").FirstOrDefault().Value)
                    {
                        var list = new List<object>();
                        var internalCounter = 0;
                        foreach (var label in input.Labels)
                        {
                            if (counter == internalCounter)
                            {
                                list.Add(item);
                            }
                            else
                            {
                                list.Add(null);
                            }

                            internalCounter++;
                        }


                        var a = new Dictionary<string, object>();
                        a.Add("label", "item" + counter);
                        a.Add("data", list);
                        input.Data.Add(a);
                        counter++;
                    }
                    <div class="ml-3 text-sm mb-4">
                        <Chart ChartTitle="@datasetResult.Name" ChartDataMultiple="input" Busy="Busy" IsDefaultDatasetViewChart="DefaultChartType == Models.Common.ChartType.Bar" Type="@SelectedChartType" />
                    </div>
                }


                
            }
        }
    </div>
</div>